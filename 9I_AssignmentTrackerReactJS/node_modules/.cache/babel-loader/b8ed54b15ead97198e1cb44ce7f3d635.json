{"ast":null,"code":"var _jsxFileName = \"/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AssignmentsData from \"./data.js\";\nimport './index.css';\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n    super();\n\n    this.handleErrors = response => {\n      if (!response.ok) {\n        this.setState({\n          title: response.statusText\n        });\n        throw Error(response.statusText);\n      }\n\n      return response;\n    };\n\n    this.changeAssignmentsData = data => {\n      this.setState({\n        id: data.id,\n        title: data.title,\n        deadline: data.deadline,\n        setOn: data.setOn\n      });\n    };\n\n    this.state = {\n      assignmentsJSON: [],\n      headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\",\n      id: 0,\n      title: \"\",\n      deadline: \"\",\n      setOn: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://beehiveapi.lionhearttrust.org.uk/v3.5/planner/test/assignments?pageIndex=0&pageSize=20').then(this.handleErrors).then(response => response.json()).then(data => {\n      data.items.sort((a, b) => new Date(a.deadline) > new Date(b.deadline) ? 1 : -1);\n      this.setState({\n        assignmentsJSON: data.items\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        title: err.toString()\n      });\n    });\n  }\n\n  render() {\n    if (this.state.assignmentsJSON) {\n      var assignmentListItems = this.state.assignmentsJSON.map(data => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6 col-md-3\",\n        key: data.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 75\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"assignmentsData-item-complete hidden\",\n        id: data.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 124\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        \"data-key\": data.id,\n        onClick: () => this.changeAssignmentsData(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 210\n        }\n      }, data.title), \" \"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"center-block img-responsive w-25\",\n      src: this.state.headerImg,\n      alt: \"Keep Calm and Do Your Assignment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center text-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"Homework Assignment Tracker\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row assignment-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AssignmentsData, {\n      id: this.state.id,\n      title: this.state.title,\n      deadline: this.state.deadline,\n      setOn: this.state.setOn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }), assignmentListItems));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(AssignmentTracker, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an UI then one at a time only\n8- Given URL endpoints not working unfortunately, have emaled Graham\n9- Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n12- Will submit 2 versions one version where endpoint JSON is saved in data.js\n13- Disregard 12, found issue with object destructuring, app is working now with fetch\n14- Upon observation of logging the response, the list items are already sorted by id\n15- However will still deploy .sort and test to ensure assignments are ordered by date\n16- Disregard, needs to be sorted by deadline not id\n17- Got it sorted in deadline order but need to be soonest deadline first so will swap < to > in line 34 (previously line 19 but error handling added) \n18- Assignments now order from soonest deadline, 9th Sep, to latest, 29th Oct\n19- Use onclick for each list item that passes data variable into function changeAssignmentsData so state can be updated\n20- These state properties then passed to child component AssignmentsData\n21- Added data-key attributes to all list items which are now divs instead and ul/li is not necessary\n22- Design choice - looks better when assignment is showing on top of 10 by 2 assignment rows and columns\n23- Tiny detail fix where Assignment ID will not show default value of 0 when app starts\n24- Reflection: using radio buttons as mentioned in 6 etc. not needed\n25- col-md-3 looks even better since the UI is more compact but big enough to select different assignments\n26- Input type of checkbox positioned just above each div which shows the title of assignment\n27- Label in the detail view is connected to each checkbox above, CSS Trick and less JS means better performance\n28- Hence, CSS trick of creating visual effects when checkbox is ticked or not is now used\n29- Checkboxes for each assignment should not be seen so .hidden class made\n30- display:none is recommended for .hidden class but this is bad for accessiblity\n31- .hidden class uses absolute positioning and small 1px height not viewable by user, passes screen-reader accessiblity tests\n32- Responsive on tablet (768px down) view, overflow-x:hidden for html, margin to title so goes to 2 lines for better readability when needed\n33- Fine tuning; adding max-height to ensure during resizing there is no box greater than another, font-weight added\n34- The outer div needs key prop, not the child of it for line 57 thus has been amended\n35- Text shadow effect added when assignment marked as complete for easier visual indication\n36- Used after element content: \"\\2713\" when checkbox ticked after complete assignment button clicked for more visual indication\n37- favicon.ico changed to the Keep Calm logo\n*/","map":{"version":3,"sources":["/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js"],"names":["React","ReactDOM","AssignmentsData","AssignmentTracker","Component","constructor","handleErrors","response","ok","setState","title","statusText","Error","changeAssignmentsData","data","id","deadline","setOn","state","assignmentsJSON","headerImg","componentDidMount","fetch","then","json","items","sort","a","b","Date","catch","err","console","log","toString","render","assignmentListItems","map","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AssignmentsData from \"./data.js\"\nimport './index.css';\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n      super()\n      this.state= {\n         assignmentsJSON : [],\n         headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\",\n         id: 0,\n         title: \"\",\n         deadline: \"\",\n         setOn: \"\" \n      }\n  }\n\n  handleErrors = (response) => {\n    if (!response.ok) {\n      this.setState( {\n        title: response.statusText\n      })\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n\n  componentDidMount() {\n    fetch('https://beehiveapi.lionhearttrust.org.uk/v3.5/planner/test/assignments?pageIndex=0&pageSize=20')\n    .then(this.handleErrors)\n    .then(response => response.json())\n    .then((data) => {\n      data.items.sort((a,b) => new Date(a.deadline) > new Date(b.deadline) ? 1 : -1);\n      this.setState({ assignmentsJSON: data.items })\n  }).catch((err) => {\n    console.log (err)\n    this.setState({\n      title: err.toString()\n      }\n    )\n  })   \n  }\n\n  changeAssignmentsData = (data) => {\n    this.setState({\n      id: data.id,\n      title: data.title,\n      deadline: data.deadline,\n      setOn: data.setOn\n    })\n  }\n\n  render() {\n      if (this.state.assignmentsJSON) {\n        var assignmentListItems = this.state.assignmentsJSON.map((data)=> <div className=\"col-sm-6 col-md-3\" key={data.id}><input type=\"checkbox\" className=\"assignmentsData-item-complete hidden\" id={data.id}/><div data-key={data.id} onClick={()=>this.changeAssignmentsData(data)}>{data.title}</div> </div>);\n      }\n      return (\n          <div className=\"row\">\n              <header>\n                  <img className=\"center-block img-responsive w-25\" src={this.state.headerImg} alt=\"Keep Calm and Do Your Assignment\" />\n                  <h1 className=\"text-center text-title\">Homework Assignment Tracker</h1>\n                  <hr/>\n              </header>\n\n              <div className=\"row assignment-items\">\n                  <AssignmentsData id={this.state.id} title={this.state.title} deadline={this.state.deadline} setOn={this.state.setOn}/>\n                  {assignmentListItems}\n              </div>\n          </div>\n      )\n  }\n}\n\nReactDOM.render(\n  <AssignmentTracker/>,\n  document.getElementById('root')\n);\n\n\n\n\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an UI then one at a time only\n8- Given URL endpoints not working unfortunately, have emaled Graham\n9- Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n12- Will submit 2 versions one version where endpoint JSON is saved in data.js\n13- Disregard 12, found issue with object destructuring, app is working now with fetch\n14- Upon observation of logging the response, the list items are already sorted by id\n15- However will still deploy .sort and test to ensure assignments are ordered by date\n16- Disregard, needs to be sorted by deadline not id\n17- Got it sorted in deadline order but need to be soonest deadline first so will swap < to > in line 34 (previously line 19 but error handling added) \n18- Assignments now order from soonest deadline, 9th Sep, to latest, 29th Oct\n19- Use onclick for each list item that passes data variable into function changeAssignmentsData so state can be updated\n20- These state properties then passed to child component AssignmentsData\n21- Added data-key attributes to all list items which are now divs instead and ul/li is not necessary\n22- Design choice - looks better when assignment is showing on top of 10 by 2 assignment rows and columns\n23- Tiny detail fix where Assignment ID will not show default value of 0 when app starts\n24- Reflection: using radio buttons as mentioned in 6 etc. not needed\n25- col-md-3 looks even better since the UI is more compact but big enough to select different assignments\n26- Input type of checkbox positioned just above each div which shows the title of assignment\n27- Label in the detail view is connected to each checkbox above, CSS Trick and less JS means better performance\n28- Hence, CSS trick of creating visual effects when checkbox is ticked or not is now used\n29- Checkboxes for each assignment should not be seen so .hidden class made\n30- display:none is recommended for .hidden class but this is bad for accessiblity\n31- .hidden class uses absolute positioning and small 1px height not viewable by user, passes screen-reader accessiblity tests\n32- Responsive on tablet (768px down) view, overflow-x:hidden for html, margin to title so goes to 2 lines for better readability when needed\n33- Fine tuning; adding max-height to ensure during resizing there is no box greater than another, font-weight added\n34- The outer div needs key prop, not the child of it for line 57 thus has been amended\n35- Text shadow effect added when assignment marked as complete for easier visual indication\n36- Used after element content: \"\\2713\" when checkbox ticked after complete assignment button clicked for more visual indication\n37- favicon.ico changed to the Keep Calm logo\n*/"]},"metadata":{},"sourceType":"module"}
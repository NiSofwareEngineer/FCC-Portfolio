{"ast":null,"code":"var _jsxFileName = \"/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      assignmentsJSON: [],\n      headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\"\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes').then(response => response.json()).then(response => {\n      this.setState({\n        assignmentsJSON: response.data\n      });\n      console.log(this.state.assignmentsJSON);\n    });\n  }\n\n  render() {\n    const assignmentListItems = [1, 2, 3].map(meme => /*#__PURE__*/React.createElement(\"li\", {\n      key: meme.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 56\n      }\n    }, meme.name));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.headerImg,\n      alt: \"Keep Calm and Do Your Assignment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    }, \"Homework Assignment Tracker\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, assignmentListItems)));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(AssignmentTracker, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an email UI then one at a time only\n8 - Given URL endpoints not working unfortunately, have emaled Graham\n9 - Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n*/","map":{"version":3,"sources":["/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js"],"names":["React","ReactDOM","AssignmentTracker","Component","constructor","state","assignmentsJSON","headerImg","componentDidMount","fetch","then","response","json","setState","data","console","log","render","assignmentListItems","map","meme","name","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAY;AACTC,MAAAA,eAAe,EAAG,EADT;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAZ;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EACmCF,IADnC,CACwCC,QAAQ,IAAI;AAC9C,WAAKE,QAAL,CAAc;AACZP,QAAAA,eAAe,EAAEK,QAAQ,CAACG;AADd,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,eAAvB;AAEH,KAPH;AAQD;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAMC,mBAAmB,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQC,GAAR,CAAaC,IAAD,iBAAS;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBD,IAAI,CAACC,IAA1B,CAArB,CAA5B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAE,KAAKhB,KAAL,CAAWE,SAArB;AAAgC,MAAA,GAAG,EAAC,kCAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGW,mBADH,CADF,CANJ,CADJ;AAeH;;AArC6C;;AAwChDjB,QAAQ,CAACgB,MAAT,eACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAQA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n      super()\n      this.state= {\n         assignmentsJSON : [],\n         headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\"\n      }\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes')\n    .then(response => response.json()).then(response => {\n          this.setState({\n            assignmentsJSON: response.data\n          })\n          console.log(this.state.assignmentsJSON)\n          \n      })\n  }\n\n  render() {\n      const assignmentListItems = [1,2,3].map((meme)=> <li key={meme.name}>{meme.name}</li>);\n      return (\n          <div>\n              <header>\n                  <img src={this.state.headerImg} alt=\"Keep Calm and Do Your Assignment\" />\n                  <h1>Homework Assignment Tracker</h1>\n              </header>\n\n              <div>\n                <ul>\n                  {assignmentListItems}\n                </ul>\n\n              </div>\n          </div>\n      )\n  }\n}\n\nReactDOM.render(\n  <AssignmentTracker/>,\n  document.getElementById('root')\n);\n\n\n\n\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an email UI then one at a time only\n8 - Given URL endpoints not working unfortunately, have emaled Graham\n9 - Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n*/"]},"metadata":{},"sourceType":"module"}
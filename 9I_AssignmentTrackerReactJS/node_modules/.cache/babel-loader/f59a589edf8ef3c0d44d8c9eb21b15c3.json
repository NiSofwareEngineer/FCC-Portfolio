{"ast":null,"code":"var _jsxFileName = \"/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport assignmentsData from \"./data.js\";\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      assignmentsJSON: [],\n      headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\"\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://beehiveapi.lionhearttrust.org.uk/v3.5/planner/test/assignments?pageIndex=0&pageSize=20').then(response => response.json()).then(data => {\n      console.log(data);\n      data.sort((a, b) => new Date(a) < new Date(b) ? 1 : -1);\n      this.setState({\n        assignmentsJSON: data\n      }).then(data => this.setState({\n        assignmentsJSON: data\n      }));\n    });\n  }\n\n  render() {\n    if (this.state.assignmentsJSON) {\n      var assignmentListItems = this.state.assignmentsJSON.map(data => /*#__PURE__*/React.createElement(\"li\", {\n        key: data.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 75\n        }\n      }, data.title));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"center-block img-responsive w-25\",\n      src: this.state.headerImg,\n      alt: \"Keep Calm and Do Your Assignment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, \"Homework Assignment Tracker\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 assignment-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, assignmentListItems)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \" TESTIN' BITCH\")));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(AssignmentTracker, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an email UI then one at a time only\n8 - Given URL endpoints not working unfortunately, have emaled Graham\n9 - Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n12- Will submit 2 versions one version where endpoint JSON is saved in data.js\n13- Disregard 12, found issue with object destructuring, app is working now with fetch\n14- Upon observation of logging the response, the list items are already sorted by id\n15- However will still deploy .sort and test to ensure assignments are ordered by date\n16- Disregard, needs to be sorted by deadline not id\n*/","map":{"version":3,"sources":["/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js"],"names":["React","ReactDOM","assignmentsData","AssignmentTracker","Component","constructor","state","assignmentsJSON","headerImg","componentDidMount","fetch","then","response","json","data","console","log","sort","a","b","Date","setState","render","assignmentListItems","map","id","title","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,WAA5B;;AAEA,MAAMC,iBAAN,SAAgCH,KAAK,CAACI,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAY;AACTC,MAAAA,eAAe,EAAG,EADT;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAZ;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,gGAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAA,MAAAA,IAAI,CAACG,IAAL,CAAU,CAACC,CAAD,EAAGC,CAAH,KAAS,IAAIC,IAAJ,CAASF,CAAT,IAAc,IAAIE,IAAJ,CAASD,CAAT,CAAd,GAA4B,CAA5B,GAAgC,CAAC,CAApD;AACA,WAAKE,QAAL,CAAc;AAAEd,QAAAA,eAAe,EAAEO;AAAnB,OAAd,EACKH,IADL,CACUG,IAAI,IAAI,KAAKO,QAAL,CAAc;AAAEd,QAAAA,eAAe,EAAEO;AAAnB,OAAd,CADlB;AAEH,KAPC;AASD;;AAEDQ,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKhB,KAAL,CAAWC,eAAf,EAAgC;AAC9B,UAAIgB,mBAAmB,GAAG,KAAKjB,KAAL,CAAWC,eAAX,CAA2BiB,GAA3B,CAAgCV,IAAD,iBAAS;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACW,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBX,IAAI,CAACY,KAAxB,CAAxC,CAA1B;AACD;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAkD,MAAA,GAAG,EAAE,KAAKpB,KAAL,CAAWE,SAAlE;AAA6E,MAAA,GAAG,EAAC,kCAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFJ,CADJ,eAMI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGe,mBADH,CADF,CANJ,eAYI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAZJ,CADJ;AAkBH;;AA3C6C;;AA8ChDtB,QAAQ,CAACqB,MAAT,eACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAQA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport assignmentsData from \"./data.js\"\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n      super()\n      this.state= {\n         assignmentsJSON : [],\n         headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\"\n      }\n  }\n\n  componentDidMount() {\n    fetch('https://beehiveapi.lionhearttrust.org.uk/v3.5/planner/test/assignments?pageIndex=0&pageSize=20')\n    .then(response => response.json())\n    .then((data) => {\n      console.log(data)\n      data.sort((a,b) => new Date(a) < new Date(b) ? 1 : -1);\n      this.setState({ assignmentsJSON: data })\n          .then(data => this.setState({ assignmentsJSON: data }));\n  })\n        \n  }\n\n  render() {\n      if (this.state.assignmentsJSON) {\n        var assignmentListItems = this.state.assignmentsJSON.map((data)=> <li key={data.id}>{data.title}</li>);\n      }\n      return (\n          <div className=\"row\">\n              <header>\n                  <img className=\"center-block img-responsive w-25\" src={this.state.headerImg} alt=\"Keep Calm and Do Your Assignment\" />\n                  <h1 className=\"text-center\">Homework Assignment Tracker</h1>\n              </header>\n\n              <div className=\"col-md-6 assignment-items\">\n                <ul>\n                  {assignmentListItems}\n                </ul>\n              </div>\n\n              <div className=\"col-md-6\">\n                <h1> TESTIN' BITCH</h1>\n              </div>\n          </div>\n      )\n  }\n}\n\nReactDOM.render(\n  <AssignmentTracker/>,\n  document.getElementById('root')\n);\n\n\n\n\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an email UI then one at a time only\n8 - Given URL endpoints not working unfortunately, have emaled Graham\n9 - Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n12- Will submit 2 versions one version where endpoint JSON is saved in data.js\n13- Disregard 12, found issue with object destructuring, app is working now with fetch\n14- Upon observation of logging the response, the list items are already sorted by id\n15- However will still deploy .sort and test to ensure assignments are ordered by date\n16- Disregard, needs to be sorted by deadline not id\n*/"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AssignmentsData from \"./data.js\";\nimport './index.css';\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n    super();\n\n    this.handleErros = response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      return response;\n    };\n\n    this.changeAssignmentsData = data => {\n      this.setState({\n        id: data.id,\n        title: data.title,\n        deadline: data.deadline,\n        setOn: data.setOn\n      });\n    };\n\n    this.state = {\n      assignmentsJSON: [],\n      headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\",\n      id: 0,\n      title: \"\",\n      deadline: \"\",\n      setOn: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://beehiveapi.lionhearttrust.org.uk/v3.5/planner/test/assignments?pageIndex=0&pageSize=20').then(response => response.json()).then(data => {\n      data.items.sort((a, b) => new Date(a.deadline) > new Date(b.deadline) ? 1 : -1);\n      this.setState({\n        assignmentsJSON: data.items\n      });\n      console.log(this.state.assignmentsJSON);\n    }).catch();\n  }\n\n  render() {\n    if (this.state.assignmentsJSON) {\n      var assignmentListItems = this.state.assignmentsJSON.map(data => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        key: data.id,\n        onClick: () => this.changeAssignmentsData(data),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 75\n        }\n      }, data.title));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"center-block img-responsive w-25\",\n      src: this.state.headerImg,\n      alt: \"Keep Calm and Do Your Assignment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, \"Homework Assignment Tracker\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row assignment-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, assignmentListItems, /*#__PURE__*/React.createElement(AssignmentsData, {\n      id: this.state.id,\n      title: this.state.title,\n      deadline: this.state.deadline,\n      setOn: this.state.setOn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    })));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(AssignmentTracker, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an email UI then one at a time only\n8- Given URL endpoints not working unfortunately, have emaled Graham\n9- Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n12- Will submit 2 versions one version where endpoint JSON is saved in data.js\n13- Disregard 12, found issue with object destructuring, app is working now with fetch\n14- Upon observation of logging the response, the list items are already sorted by id\n15- However will still deploy .sort and test to ensure assignments are ordered by date\n16- Disregard, needs to be sorted by deadline not id\n17- Got it sorted in deadline order but need to be soonest deadline first so will swap < to > in line 19\n18- Assignments now order from soonest deadline, 9th Sep, to latest, 29th Oct\n19- Use onclick for each list item that passes data variable into function changeAssignmentsData so state can be updated\n20- These state properties then passed to child component AssignmentsData\n*/","map":{"version":3,"sources":["/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js"],"names":["React","ReactDOM","AssignmentsData","AssignmentTracker","Component","constructor","handleErros","response","ok","Error","statusText","changeAssignmentsData","data","setState","id","title","deadline","setOn","state","assignmentsJSON","headerImg","componentDidMount","fetch","then","json","items","sort","a","b","Date","console","log","catch","render","assignmentListItems","map","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AssignmentsData from \"./data.js\"\nimport './index.css';\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n      super()\n      this.state= {\n         assignmentsJSON : [],\n         headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\",\n         id: 0,\n         title: \"\",\n         deadline: \"\",\n         setOn: \"\" \n      }\n  }\n\n  handleErros = (response) => {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n\n  componentDidMount() {\n    fetch('https://beehiveapi.lionhearttrust.org.uk/v3.5/planner/test/assignments?pageIndex=0&pageSize=20')\n    .then(response => response.json())\n    .then((data) => {\n      data.items.sort((a,b) => new Date(a.deadline) > new Date(b.deadline) ? 1 : -1);\n      this.setState({ assignmentsJSON: data.items })\n      console.log(this.state.assignmentsJSON);\n  }).catch()   \n  }\n\n  changeAssignmentsData = (data) => {\n    this.setState({\n      id: data.id,\n      title: data.title,\n      deadline: data.deadline,\n      setOn: data.setOn\n    })\n  \n  }\n\n\n  render() {\n      if (this.state.assignmentsJSON) {\n        var assignmentListItems = this.state.assignmentsJSON.map((data)=> <div className=\"col-md-6\" key={data.id} onClick={()=>this.changeAssignmentsData(data)}>{data.title}</div>);\n      }\n      return (\n          <div className=\"row\">\n              <header>\n                  <img className=\"center-block img-responsive w-25\" src={this.state.headerImg} alt=\"Keep Calm and Do Your Assignment\" />\n                  <h1 className=\"text-center\">Homework Assignment Tracker</h1>\n              </header>\n\n              <div className=\"row assignment-items\">\n                  {assignmentListItems}\n                  <AssignmentsData id={this.state.id} title={this.state.title} deadline={this.state.deadline} setOn={this.state.setOn}/>\n              </div>\n          </div>\n      )\n  }\n}\n\nReactDOM.render(\n  <AssignmentTracker/>,\n  document.getElementById('root')\n);\n\n\n\n\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an email UI then one at a time only\n8- Given URL endpoints not working unfortunately, have emaled Graham\n9- Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n12- Will submit 2 versions one version where endpoint JSON is saved in data.js\n13- Disregard 12, found issue with object destructuring, app is working now with fetch\n14- Upon observation of logging the response, the list items are already sorted by id\n15- However will still deploy .sort and test to ensure assignments are ordered by date\n16- Disregard, needs to be sorted by deadline not id\n17- Got it sorted in deadline order but need to be soonest deadline first so will swap < to > in line 19\n18- Assignments now order from soonest deadline, 9th Sep, to latest, 29th Oct\n19- Use onclick for each list item that passes data variable into function changeAssignmentsData so state can be updated\n20- These state properties then passed to child component AssignmentsData\n*/"]},"metadata":{},"sourceType":"module"}
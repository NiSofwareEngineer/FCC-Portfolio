{"ast":null,"code":"var _jsxFileName = \"/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AssignmentsData from \"./data.js\";\nimport './index.css';\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n    super();\n\n    this.changeAssignmentsData = event => {\n      console.log(event.title);\n      this.setState({\n        selectedAssignment: true\n      });\n    };\n\n    this.changeChecked = () => {\n      this.setState({\n        complete: this.state.complete ? false : true\n      });\n    };\n\n    this.state = {\n      assignmentsJSON: [],\n      headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\",\n      selectedAssignment: 0,\n      complete: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://beehiveapi.lionhearttrust.org.uk/v3.5/planner/test/assignments?pageIndex=0&pageSize=20').then(response => response.json()).then(data => {\n      data.items.sort((a, b) => new Date(a.deadline) > new Date(b.deadline) ? 1 : -1);\n      this.setState({\n        assignmentsJSON: data.items\n      });\n    });\n  }\n\n  render() {\n    if (this.state.assignmentsJSON) {\n      var assignmentListItems = this.state.assignmentsJSON.map(data => /*#__PURE__*/React.createElement(\"li\", {\n        key: data.id,\n        onClick: this.changeAssignmentsData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 75\n        }\n      }, data.title));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"center-block img-responsive w-25\",\n      src: this.state.headerImg,\n      alt: \"Keep Calm and Do Your Assignment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, \"Homework Assignment Tracker\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row assignment-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, assignmentListItems), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 assignment-items-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AssignmentsData, {\n      complete: this.state.complete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(AssignmentTracker, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an email UI then one at a time only\n8- Given URL endpoints not working unfortunately, have emaled Graham\n9- Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n12- Will submit 2 versions one version where endpoint JSON is saved in data.js\n13- Disregard 12, found issue with object destructuring, app is working now with fetch\n14- Upon observation of logging the response, the list items are already sorted by id\n15- However will still deploy .sort and test to ensure assignments are ordered by date\n16- Disregard, needs to be sorted by deadline not id\n17- Got it sorted in deadline order but need to be soonest deadline first so will swap < to > in line 19\n18- Assignments now order from soonest deadline, 9th Sep, to latest, 29th Oct\n*/","map":{"version":3,"sources":["/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js"],"names":["React","ReactDOM","AssignmentsData","AssignmentTracker","Component","constructor","changeAssignmentsData","event","console","log","title","setState","selectedAssignment","changeChecked","complete","state","assignmentsJSON","headerImg","componentDidMount","fetch","then","response","json","data","items","sort","a","b","Date","deadline","render","assignmentListItems","map","id","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AssignmentsData from \"./data.js\"\nimport './index.css';\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n      super()\n      this.state= {\n         assignmentsJSON : [],\n         headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\",\n         selectedAssignment: 0,\n         complete: false\n      }\n  }\n\n  componentDidMount() {\n    fetch('https://beehiveapi.lionhearttrust.org.uk/v3.5/planner/test/assignments?pageIndex=0&pageSize=20')\n    .then(response => response.json())\n    .then((data) => {\n      data.items.sort((a,b) => new Date(a.deadline) > new Date(b.deadline) ? 1 : -1);\n      this.setState({ assignmentsJSON: data.items })\n  })     \n  }\n\n  changeAssignmentsData = (event) => {\n    console.log(event.title)\n    this.setState({\n      selectedAssignment: true\n    })\n  }\n\n  changeChecked = () => { \n    this.setState({\n        complete: this.state.complete ? false : true\n    })\n}\n\n  render() {\n      if (this.state.assignmentsJSON) {\n        var assignmentListItems = this.state.assignmentsJSON.map((data)=> <li key={data.id} onClick={this.changeAssignmentsData}>{data.title}</li>);\n      }\n      return (\n          <div className=\"row\">\n              <header>\n                  <img className=\"center-block img-responsive w-25\" src={this.state.headerImg} alt=\"Keep Calm and Do Your Assignment\" />\n                  <h1 className=\"text-center\">Homework Assignment Tracker</h1>\n              </header>\n\n              <div className=\"row assignment-items\">\n                <ul className=\"col-md-6\">\n                  {assignmentListItems}\n                </ul>\n                <div className=\"col-md-6 assignment-items-details\">\n                  <AssignmentsData complete={this.state.complete}/>\n                </div>\n              </div>\n          </div>\n      )\n  }\n}\n\nReactDOM.render(\n  <AssignmentTracker/>,\n  document.getElementById('root')\n);\n\n\n\n\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an email UI then one at a time only\n8- Given URL endpoints not working unfortunately, have emaled Graham\n9- Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n12- Will submit 2 versions one version where endpoint JSON is saved in data.js\n13- Disregard 12, found issue with object destructuring, app is working now with fetch\n14- Upon observation of logging the response, the list items are already sorted by id\n15- However will still deploy .sort and test to ensure assignments are ordered by date\n16- Disregard, needs to be sorted by deadline not id\n17- Got it sorted in deadline order but need to be soonest deadline first so will swap < to > in line 19\n18- Assignments now order from soonest deadline, 9th Sep, to latest, 29th Oct\n*/"]},"metadata":{},"sourceType":"module"}
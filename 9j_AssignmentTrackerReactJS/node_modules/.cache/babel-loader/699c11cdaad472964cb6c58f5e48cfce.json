{"ast":null,"code":"var _jsxFileName = \"/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      assignmentsJSON: [],\n      headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\"\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes').then(response => response.json()).then(response => {\n      const {\n        assignments\n      } = response.data;\n      this.setState({\n        assignmentsJSON: [1, 2, 3, 4, 5]\n      });\n    });\n  }\n\n  render() {\n    const assignmentListItems = this.state.assignmentsJSON.map(meme => /*#__PURE__*/React.createElement(\"li\", {\n      key: meme.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 75\n      }\n    }, meme));\n    console.log(this.state.assignmentsJSON);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"center-block w-10\",\n      src: this.state.headerImg,\n      alt: \"Keep Calm and Do Your Assignment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      class: \"col-xs-12 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, \"Homework Assignment Tracker\")), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-6 assignment-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, assignmentListItems)), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \" TESTIN' BITCH\")));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(AssignmentTracker, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an email UI then one at a time only\n8 - Given URL endpoints not working unfortunately, have emaled Graham\n9 - Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n*/","map":{"version":3,"sources":["/Users/qawebsites/Development/beauchamp-college-project/assignment-tracker/src/index.js"],"names":["React","ReactDOM","AssignmentTracker","Component","constructor","state","assignmentsJSON","headerImg","componentDidMount","fetch","then","response","json","assignments","data","setState","render","assignmentListItems","map","meme","id","console","log","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAY;AACTC,MAAAA,eAAe,EAAG,EADT;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAZ;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMC,QAAQ,IAAI;AACZ,YAAM;AAACE,QAAAA;AAAD,UAAgBF,QAAQ,CAACG,IAA/B;AACA,WAAKC,QAAL,CAAc;AACZT,QAAAA,eAAe,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT;AADL,OAAd;AAGH,KAPH;AAQD;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAMC,mBAAmB,GAAG,KAAKZ,KAAL,CAAWC,eAAX,CAA2BY,GAA3B,CAAgCC,IAAD,iBAAS;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAnB,CAAxC,CAA5B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,eAAvB;AACA,wBACI;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAC,mBAAX;AAA+B,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,SAA/C;AAA0D,MAAA,GAAG,EAAC,kCAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,KAAK,EAAC,uBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFJ,CADJ,eAMI;AAAK,MAAA,KAAK,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGU,mBADH,CADF,CANJ,eAYI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAZJ,CADJ;AAkBH;;AAzC6C;;AA4ChDhB,QAAQ,CAACe,MAAT,eACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAQA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass AssignmentTracker extends React.Component {\n  constructor() {\n      super()\n      this.state= {\n         assignmentsJSON : [],\n         headerImg: \"https://poster.keepcalmandposters.com/8738135.jpg\"\n      }\n  }\n\n  componentDidMount() {\n    fetch('https://api.imgflip.com/get_memes')\n    .then(response => response.json())\n    .then(response => {\n          const {assignments} = response.data\n          this.setState({\n            assignmentsJSON: [1,2,3,4,5]\n          })  \n      })\n  }\n\n  render() {\n      const assignmentListItems = this.state.assignmentsJSON.map((meme)=> <li key={meme.id}>{meme}</li>);\n      console.log(this.state.assignmentsJSON)\n      return (\n          <div class=\"row\">\n              <header class=\"row\">\n                  <img class=\"center-block w-10\" src={this.state.headerImg} alt=\"Keep Calm and Do Your Assignment\" />\n                  <h1 class=\"col-xs-12 text-center\">Homework Assignment Tracker</h1>\n              </header>\n\n              <div class=\"col-md-6 assignment-items\">\n                <ul>\n                  {assignmentListItems}\n                </ul>\n              </div>\n\n              <div class=\"col-md-6\">\n                <h1> TESTIN' BITCH</h1>\n              </div>\n          </div>\n      )\n  }\n}\n\nReactDOM.render(\n  <AssignmentTracker/>,\n  document.getElementById('root')\n);\n\n\n\n\n/* Developer Notes Taken Whilst this app was being made \n\n1- Use of CSS Input Checked in order to show assignments when clicked\n2- Need to determine if radio buttons or check boxes are best for 1 \n3- Dev thinks a good sense of humour is good for teamwork and even better in a education environment\n4- Due to 3, an image has been selected appropiately\n5- Initialise state to have data called assignmentsJSON, an array that can take in JSON data via fetch GET request done in React lifecycle method\ncomponentDidMount() \n6- Re-factor img src of image selected in 3 to make use of initialising state, data called headerImg\n7- Radio buttons for 2 would be better - if it were to look like an email UI then one at a time only\n8 - Given URL endpoints not working unfortunately, have emaled Graham\n9 - Using a meme api instead in the mean time\n10- Use .map to loop through and display assignmentJSON prop in state after the array has been filled due to fetch in lifecycle hook\n11- Hence, display each list item by 10's .map loop\n*/"]},"metadata":{},"sourceType":"module"}